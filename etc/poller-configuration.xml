<poller-configuration xmlns="http://xmlns.opennms.org/xsd/config/poller" threads="30" asyncPollingEngineEnabled="true" maxConcurrentAsyncPolls="200" nextOutageId="SELECT nextval('outageNxtId')" serviceUnresponsiveEnabled="false" pathOutageEnabled="false">
   <node-outage status="on" pollAllIfNoCriticalServiceDefined="true">
      <critical-service name="ICMP" />
   </node-outage>
   <package name="Ping-1m">
      <filter>catincPing-1m</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254" />
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" />
      <rrd step="60">
         <rra>RRA:AVERAGE:0.5:1:527040</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <service name="ICMP" interval="60000" user-defined="false" status="on">
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="rrd-base-name" value="icmp" />
         <parameter key="ds-name" value="icmp" />
      </service>
      <downtime begin="0" end="300000" interval="30000" /><!-- 30s, 0, 5m -->
      <downtime begin="300000" end="43200000" interval="300000" /><!-- 5m, 5m, 12h -->
      <downtime begin="43200000" end="432000000" interval="600000" /><!-- 10m, 12h, 5d -->
      <downtime begin="432000000" interval="3600000" /><!-- 1h, 5d -->
   </package>
   <package name="Ping-5m">
      <filter>IPADDR != '0.0.0.0'</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254" />
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" />
      <rrd step="300">
         <rra>RRA:AVERAGE:0.5:1:105408</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <service name="ICMP" interval="300000" user-defined="false" status="on">
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="rrd-base-name" value="icmp" />
         <parameter key="ds-name" value="icmp" />
      </service>
      <downtime begin="0" end="300000" interval="30000" /><!-- 30s, 0, 5m -->
      <downtime begin="300000" end="43200000" interval="300000" /><!-- 5m, 5m, 12h -->
      <downtime begin="43200000" end="432000000" interval="600000" /><!-- 10m, 12h, 5d -->
      <downtime begin="432000000" interval="3600000" /><!-- 1h, 5d -->
   </package>
   <package name="Ping-15m">
      <filter>catincPing-15m</filter>
      <filter>IPADDR != '0.0.0.0'</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254" />
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" />
      <rrd step="900">
         <rra>RRA:AVERAGE:0.5:1:35136</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <service name="ICMP" interval="900000" user-defined="false" status="on">
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="rrd-base-name" value="icmp" />
         <parameter key="ds-name" value="icmp" />
      </service>
      <downtime begin="0" end="300000" interval="30000" /><!-- 30s, 0, 5m -->
      <downtime begin="300000" end="43200000" interval="300000" /><!-- 5m, 5m, 12h -->
      <downtime begin="43200000" end="432000000" interval="600000" /><!-- 10m, 12h, 5d -->
      <downtime begin="432000000" interval="3600000" /><!-- 1h, 5d -->
   </package>
   <package name="ICMP-60m">
      <filter>catincPing-60m</filter>
      <include-range begin="1.1.1.1" end="254.254.254.254" />
      <include-range begin="::1" end="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" />
      <rrd step="3600">
         <rra>RRA:AVERAGE:0.5:1:8784</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <service name="ICMP" interval="3600000" user-defined="false" status="on">
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="rrd-base-name" value="icmp" />
         <parameter key="ds-name" value="icmp" />
      </service>
      <downtime begin="0" end="300000" interval="30000" /><!-- 30s, 0, 5m -->
      <downtime begin="300000" end="43200000" interval="300000" /><!-- 5m, 5m, 12h -->
      <downtime begin="43200000" end="432000000" interval="600000" /><!-- 10m, 12h, 5d -->
      <downtime begin="432000000" interval="3600000" /><!-- 1h, 5d -->
   </package>

   <!--
      This package is defined for Minion nodes. Don't alter/remove this. If minions are not getting used, it is safe to remove below pkg.
   -->
   <package name="Minion">
      <filter>foreignSource == 'Minions' AND IPADDR != '0.0.0.0'</filter>
      <rrd step="30">
         <rra>RRA:AVERAGE:0.5:1:1054080</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <service name="Minion-Heartbeat" interval="30000" user-defined="false" status="on">
         <parameter key="period" value="${requisition:period|detector:period|30000}" /><!-- Service interval should be same as period -->
      </service>
      <service name="Minion-RPC" interval="30000" user-defined="false" status="on">
         <parameter key="ttl" value="${requisition:ttl|detector:ttl|30000}" /><!-- TTL should be same as period -->
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="ds-name" value="minion-rpc" />
      </service>
      <service name="JMX-Minion" interval="30000" user-defined="false" status="on">
         <parameter key="port" value="${requisition:port|detector:port|18980}" />
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="rrd-repository" value="/opt/opennms/share/rrd/response" />
         <parameter key="ds-name" value="jmx-minion" />
         <parameter key="use-foreign-id-as-system-id" value="${requisition:use-foreign-id-as-system-id|detector:use-foreign-id-as-system-id|true}" />
      </service>
      <service name="SNMP" interval="30000" user-defined="false" status="on">
         <parameter key="retry" value="${requisition:poller-retry|requisition:retry|detector:retry|2}" />
         <parameter key="timeout" value="${requisition:poller-timeout|requisition:timeout|detector:timeout|3000}" />
         <parameter key="oid" value="${requisition:oid|detector:oid|.1.3.6.1.2.1.1.2.0}" />
      </service>
      <!-- Query every 30secs always -->
      <downtime begin="0" interval="30000" /><!-- 30s -->
   </package>

   <monitor service="ICMP" class-name="org.opennms.netmgt.poller.monitors.IcmpMonitor" />
   <monitor service="SNMP" class-name="org.opennms.netmgt.poller.monitors.SnmpMonitor" />
   <monitor service="JMX-Minion" class-name="org.opennms.netmgt.poller.monitors.Jsr160Monitor" />
   <monitor service="Minion-Heartbeat" class-name="org.opennms.netmgt.poller.monitors.MinionHeartbeatMonitor" />
   <monitor service="Minion-RPC" class-name="org.opennms.netmgt.poller.monitors.MinionRpcMonitor" />
</poller-configuration>
